{"version":3,"sources":["NameForm.js","Canvas.js","ImageCarousel.js","App.js","reportWebVitals.js","index.js"],"names":["NameForm","props","handleFirstNameChange","bind","handleLastNameChange","handlePronounsChange","e","this","onFirstNameChange","target","value","onLastNameChange","onPronounsChange","firstName","lastName","pronouns","Form","Row","style","padding","Control","onChange","placeholder","size","type","Component","Canvas","ref","canvasRef","useRef","previewRef","useEffect","canvas","current","context","getContext","rescaleCanvas","width","height","clearRect","window","innerWidth","innerHeight","imgURL","backgroundImage","img","Image","crossOrigin","src","onload","drawImage","textAlign","fillStyle","font","fillText","toDataURL","ratio","getPixelRatio","getComputedStyle","getPropertyValue","slice","scale","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","useImperativeHandle","downloadImage","data","a","document","createElement","href","download","click","body","appendChild","console","log","display","alt","className","forwardRef","ImageCarousel","useState","index","setIndex","images","Carousel","activeIndex","onSelect","selectedIndex","onBackgroundImageSelect","process","interval","slide","map","imageSrc","Item","App","setFirstName","setLastName","setPronouns","setBackgroundImage","Navbar","bg","variant","Brand","Container","Col","margin","paddingLeft","paddingTop","paddingBottom","marginLeft","Button","onClick","marginTop","marginRight","alignContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65d01de0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class NameForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\r\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\r\n        this.handlePronounsChange = this.handlePronounsChange.bind(this);\r\n    };\r\n\r\n    handleFirstNameChange(e) {\r\n        this.props.onFirstNameChange(e.target.value);\r\n    }\r\n\r\n    handleLastNameChange(e) {\r\n        this.props.onLastNameChange(e.target.value);\r\n    }\r\n\r\n    handlePronounsChange(e) {\r\n        this.props.onPronounsChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { firstName, lastName, pronouns } = this.props;\r\n\r\n        return (\r\n            <Form>\r\n                <Form.Row style={{ padding: 8 }}>\r\n                    <Form.Control\r\n                        value={firstName}\r\n                        onChange={this.handleFirstNameChange}\r\n                        placeholder=\"First Name\"\r\n                        size='lg'\r\n                        type=\"text\" />\r\n                </Form.Row>\r\n                <Form.Row style={{ padding: 8 }}>\r\n                    <Form.Control\r\n                        value={lastName}\r\n                        onChange={this.handleLastNameChange}\r\n                        placeholder=\"Last Name\"\r\n                        size='lg'\r\n                        type=\"text\" />\r\n                </Form.Row>\r\n                <Form.Row style={{ padding: 8 }}>\r\n                    <Form.Control\r\n                        value={pronouns}\r\n                        onChange={this.handlePronounsChange}\r\n                        placeholder=\"Pronouns (optional)\"\r\n                        size='lg'\r\n                        type=\"text\" />\r\n                </Form.Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\r\n\r\nfunction Canvas(props, ref) {\r\n    const canvasRef = useRef(null);\r\n    const previewRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n\r\n        // rescale for hdpi screens\r\n        const [width, height] = rescaleCanvas(canvas, context);\r\n\r\n        context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n\r\n        // draw background image\r\n        const imgURL = props.backgroundImage;\r\n        const img = new Image();\r\n        img.crossOrigin = 'Anonymous';\r\n        img.src = imgURL;\r\n        img.onload = () => {\r\n            context.drawImage(img, 0, 0, width, height)\r\n\r\n            // draw name\r\n            context.textAlign = 'right';\r\n            context.fillStyle = '#FFF';\r\n            context.font = 'bold 150px Arial';\r\n            context.fillText(props.firstName, width - 50, 150, width / 2);\r\n            context.font = 'bold 100px Arial';\r\n            context.fillText(props.lastName, width - 50, 270, width / 2);\r\n            if (props.pronouns) {\r\n                context.font = 'bold 50px Arial';\r\n                context.fillText(`(${props.pronouns})`, width - 50, 350, width / 2);\r\n            }\r\n\r\n            // convert canvas into preview image\r\n            const preview = previewRef.current;\r\n            preview.src = canvas.toDataURL('image/png');\r\n        };\r\n    })\r\n\r\n    const rescaleCanvas = (canvas, context) => {\r\n        const ratio = getPixelRatio(context);\r\n        const width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n        const height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n        canvas.width = width * ratio;\r\n        canvas.height = height * ratio;\r\n        context.scale(ratio, ratio);\r\n        return [width, height];\r\n    };\r\n\r\n    const getPixelRatio = context => {\r\n        var backingStore =\r\n            context.backingStorePixelRatio ||\r\n            context.webkitBackingStorePixelRatio ||\r\n            context.mozBackingStorePixelRatio ||\r\n            context.msBackingStorePixelRatio ||\r\n            context.oBackingStorePixelRatio ||\r\n            1;\r\n        return (window.devicePixelRatio || 1) / backingStore;\r\n    };\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            downloadImage() {\r\n                const preview = previewRef.current;\r\n                const data = preview.src;\r\n\r\n                const a = document.createElement('a');\r\n                a.href = data;\r\n                a.download = 'wit_background.png';\r\n                a.click();\r\n                document.body.appendChild(a);\r\n                console.log(\"Save!\");\r\n            }\r\n        })\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <canvas\r\n                ref={canvasRef}\r\n                style={{ width: 1920, height: 1080, display: 'none' }}\r\n            />\r\n            <img\r\n                alt=''\r\n                className='auto-resize'\r\n                ref={previewRef}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n// eslint-disable-next-line no-func-assign\r\nCanvas = forwardRef(Canvas);\r\n\r\nexport default Canvas;\r\n","import { useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nfunction ImageCarousel(props) {\r\n    const [index, setIndex] = useState(0);\r\n    const images = ['/wit_background_1.png', '/wit_background_2.png', '/wit_background_3.png', '/wit_background_4.png']\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n        props.onBackgroundImageSelect(process.env.PUBLIC_URL + images[selectedIndex]);\r\n    };\r\n\r\n    return (\r\n        <Carousel\r\n            activeIndex={index}\r\n            onSelect={handleSelect}\r\n            interval={null}\r\n            slide={false} >\r\n            {images.map((imageSrc) =>\r\n                <Carousel.Item key={imageSrc}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={props.backgroundImage}\r\n                        alt=\"\"\r\n                        style={{ padding: 8 }}\r\n                    />\r\n                </Carousel.Item>\r\n            )}\r\n        </Carousel >\r\n    );\r\n}\r\n\r\nexport default ImageCarousel;","import './App.css';\nimport React, { useState, useRef } from 'react'\nimport NameForm from './NameForm';\nimport Canvas from './Canvas';\nimport ImageCarousel from './ImageCarousel';\nimport { Container, Row, Col, Button, Navbar } from 'react-bootstrap';\n\nfunction App() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [pronouns, setPronouns] = useState('');\n  const [backgroundImage, setBackgroundImage] = useState(process.env.PUBLIC_URL + '/wit_background_1.png');\n\n  function handleFirstNameChange(firstName) {\n    setFirstName(firstName);\n  }\n\n  function handleLastNameChange(lastName) {\n    setLastName(lastName);\n  }\n\n  function handlePronounsChange(pronouns) {\n    setPronouns(pronouns);\n  }\n\n  const canvasRef = useRef(null);\n  const onSaveClick = () => {\n    canvasRef.current.downloadImage();\n  }\n\n  function handleBackgroundImageSelect(backgroundImage) {\n    setBackgroundImage(backgroundImage);\n  }\n\n  return (\n    <div className=\"App\" >\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <h1>\n            <img\n              alt=\"logo\"\n              src={process.env.PUBLIC_URL + '/wit_logo.png'}\n              width=\"50\"\n              height=\"50\"\n              className=\"d-inline-block align-center\"\n            />\n            Remote Classroom Background Generator\n          </h1>\n        </Navbar.Brand>\n      </Navbar>\n      <Container>\n        <Row>\n          <Col>\n            <h3 style={{ margin: 24 }} className=\"text-center\">\n              Create an approved virtual background for use in classroom Zoom sessions.\n          </h3>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <NameForm\n              firstName={firstName}\n              onFirstNameChange={handleFirstNameChange}\n              lastName={lastName}\n              onLastNameChange={handleLastNameChange}\n              pronouns={pronouns}\n              onPronounsChange={handlePronounsChange}\n            />\n            <h4 style={{ paddingLeft: 8, paddingTop: 24, paddingBottom: 0 }}>Choose a Background:</h4>\n            <ImageCarousel\n              style={{ padding: 8 }}\n              backgroundImage={backgroundImage}\n              onBackgroundImageSelect={handleBackgroundImageSelect}\n            />\n          </Col>\n          <Col style={{ marginLeft: 24 }}>\n            <Row>\n              <Canvas\n                ref={canvasRef}\n                firstName={firstName}\n                lastName={lastName}\n                pronouns={pronouns}\n                backgroundImage={backgroundImage}\n              />\n            </Row>\n            <Row>\n              <Button\n                variant='secondary'\n                onClick={onSaveClick}\n                style={{ marginTop: 24, marginLeft: 'auto', marginRight: 'auto', alignContent: 'center' }}>\n                Save Image\n              </Button>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}