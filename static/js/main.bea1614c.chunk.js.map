{"version":3,"sources":["NameForm.js","Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["NameForm","props","handleFirstNameChange","bind","handleLastNameChange","handlePronounsChange","e","this","onFirstNameChange","target","value","onLastNameChange","onPronounsChange","firstName","lastName","pronouns","Form","Row","Control","onChange","placeholder","size","type","Component","Canvas","ref","canvasRef","useRef","previewRef","useEffect","canvas","current","context","getContext","rescaleCanvas","width","height","clearRect","window","innerWidth","innerHeight","img","Image","crossOrigin","src","onload","drawImage","textAlign","fillStyle","font","fillText","toDataURL","ratio","getPixelRatio","getComputedStyle","getPropertyValue","slice","scale","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","useImperativeHandle","downloadImage","data","a","document","createElement","href","download","click","body","appendChild","console","log","style","display","alt","className","forwardRef","App","useState","setFirstName","setLastName","setPronouns","Container","marginTop","Col","Button","variant","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bea1614c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class NameForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\r\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\r\n        this.handlePronounsChange = this.handlePronounsChange.bind(this);\r\n    };\r\n\r\n    handleFirstNameChange(e) {\r\n        this.props.onFirstNameChange(e.target.value);\r\n    }\r\n\r\n    handleLastNameChange(e) {\r\n        this.props.onLastNameChange(e.target.value);\r\n    }\r\n\r\n    handlePronounsChange(e) {\r\n        this.props.onPronounsChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { firstName, lastName, pronouns } = this.props;\r\n\r\n        return (\r\n            <Form>\r\n                <Form.Row>\r\n                    <Form.Control\r\n                        value={firstName}\r\n                        onChange={this.handleFirstNameChange}\r\n                        placeholder=\"First Name\"\r\n                        size='lg'\r\n                        type=\"text\" />\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Control\r\n                        value={lastName}\r\n                        onChange={this.handleLastNameChange}\r\n                        placeholder=\"Last Name\"\r\n                        size='lg'\r\n                        type=\"text\" />\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Control\r\n                        value={pronouns}\r\n                        onChange={this.handlePronounsChange}\r\n                        placeholder=\"Pronouns (optional)\"\r\n                        size='lg'\r\n                        type=\"text\" />\r\n                </Form.Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\r\n\r\nfunction Canvas(props, ref) {\r\n    const canvasRef = useRef(null);\r\n    const previewRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n\r\n        // rescale for hdpi screens\r\n        const [width, height] = rescaleCanvas(canvas, context);\r\n\r\n        context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n\r\n        // draw background image\r\n        const imgURL = 'https://virtualbackdrop.s3.amazonaws.com/wit_background_4.png';\r\n        const img = new Image();\r\n        img.crossOrigin = 'Anonymous';\r\n        img.src = imgURL;\r\n        img.onload = () => {\r\n            context.drawImage(img, 0, 0, width, height)\r\n\r\n            // draw name\r\n            context.textAlign = 'right';\r\n            context.fillStyle = '#FFF';\r\n            context.font = 'bold 150px Arial';\r\n            context.fillText(props.firstName, width - 50, 150, width / 2);\r\n            context.font = 'bold 100px Arial';\r\n            context.fillText(props.lastName, width - 50, 270, width / 2);\r\n            if (props.pronouns) {\r\n                context.font = 'bold 50px Arial';\r\n                context.fillText(`(${props.pronouns})`, width - 50, 350, width / 2);\r\n            }\r\n\r\n            // convert canvas into preview image\r\n            const preview = previewRef.current;\r\n            preview.src = canvas.toDataURL('image/png');\r\n        };\r\n    })\r\n\r\n    const rescaleCanvas = (canvas, context) => {\r\n        const ratio = getPixelRatio(context);\r\n        const width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n        const height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n        canvas.width = width * ratio;\r\n        canvas.height = height * ratio;\r\n        context.scale(ratio, ratio);\r\n        return [width, height];\r\n    };\r\n\r\n    const getPixelRatio = context => {\r\n        var backingStore =\r\n            context.backingStorePixelRatio ||\r\n            context.webkitBackingStorePixelRatio ||\r\n            context.mozBackingStorePixelRatio ||\r\n            context.msBackingStorePixelRatio ||\r\n            context.oBackingStorePixelRatio ||\r\n            1;\r\n        return (window.devicePixelRatio || 1) / backingStore;\r\n    };\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            downloadImage() {\r\n                const preview = previewRef.current;\r\n                const data = preview.src;\r\n\r\n                const a = document.createElement('a');\r\n                a.href = data;\r\n                a.download = 'wit_background.png';\r\n                a.click();\r\n                document.body.appendChild(a);\r\n                console.log(\"Save!\");\r\n            }\r\n        })\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <canvas\r\n                ref={canvasRef}\r\n                style={{ width: 1920, height: 1080, display: 'none' }}\r\n            />\r\n            <img\r\n                alt=''\r\n                className='auto-resize'\r\n                ref={previewRef}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n// eslint-disable-next-line no-func-assign\r\nCanvas = forwardRef(Canvas);\r\n\r\nexport default Canvas;\r\n","import './App.css';\nimport React, { useState, useRef } from 'react'\nimport NameForm from './NameForm';\nimport Canvas from './Canvas';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nfunction App() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [pronouns, setPronouns] = useState('');\n\n  function handleFirstNameChange(firstName) {\n    setFirstName(firstName);\n  }\n\n  function handleLastNameChange(lastName) {\n    setLastName(lastName);\n  }\n\n  function handlePronounsChange(pronouns) {\n    setPronouns(pronouns);\n  }\n\n  const canvasRef = useRef(null);\n  const onSaveClick = () => {\n    canvasRef.current.downloadImage();\n  }\n\n  return (\n    <div className=\"App\" >\n      <header className=\"App-header\">\n        <h1>WIT Remote Background Generator</h1>\n      </header>\n      <Container style={{ marginTop: 36 }}>\n        <Row>\n          <Col>\n            <NameForm\n              firstName={firstName}\n              onFirstNameChange={handleFirstNameChange}\n              lastName={lastName}\n              onLastNameChange={handleLastNameChange}\n              pronouns={pronouns}\n              onPronounsChange={handlePronounsChange}\n            />\n            <Button variant='secondary' onClick={onSaveClick}>Save Image</Button>\n          </Col>\n          <Col>\n            <Canvas\n              ref={canvasRef}\n              firstName={firstName}\n              lastName={lastName}\n              pronouns={pronouns}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}